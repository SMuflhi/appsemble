apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "appsemble.fullname" . }}-migrate
  labels:
    {{ include "appsemble.labels" . }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: '0'
spec:
  template:
    metadata:
      annotations:
        {{ include "appsemble.gitlab" . | indent 8 }}
    spec:
      restartPolicy: Never
      containers:
        - name: {{ include "appsemble.fullname" . }}-migrate
          image: "{{ .Values.image.repository }}:{{ include "appsemble.tag" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - node
            - packages/server/dist
            - migrate
            {{ with .Values.migrateTo }}
            - {{ . }}
            {{ end }}
          env:
            - name: DATABASE_HOST
              value: {{ .Values.postgresql.fullnameOverride }}
            {{ if .Values.postgresSSL }}
            - name: DATABASE_SSL
              value: 'true'
            {{ end }}
            - name: DATABASE_PORT
              value: {{ .Values.global.postgresql.servicePort | quote }}
            - name: DATABASE_NAME
              value: {{ .Values.global.postgresql.postgresqlDatabase }}
            - name: DATABASE_USER
              value: {{ .Values.global.postgresql.postgresqlUsername }}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.postgresql.existingSecret }}
                  key: postgresql-password
            {{- with .Values.sentrySecret }}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ . | quote }}
                  key: dsn
            {{- end }}
            {{- with .Values.sentryEnvironment }}
            - name: SENTRY_ENVIRONMENT
              value: {{ . | quote }}
            {{- end }}
