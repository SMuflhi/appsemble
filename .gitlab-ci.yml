image: node:10


stages:
  - test
  - build
  - publish


.yarn: &yarn
  before_script:
    - apt-get update
    - apt-get install nasm
    - yarn --frozen-lockfile
  script: yarn $CI_JOB_NAME


build:app:
  <<: *yarn
  script: yarn build
  artifacts:
    paths:
      - dist/


build:docker:
  stage: build
  services:
    - docker:dind
  image: docker
  tags:
    - dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  dependencies:
    - build:app
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"


eslint: *yarn


pages:
  stage: build
  image: busybox
  variables:
    GIT_STRATEGY: none
  dependencies:
    - test
  only:
    - master
  script: mv coverage/lcov-report public
  artifacts:
    paths:
      - public/


publish:docker:tag:
  stage: publish
  services:
    - docker:dind
  image: docker
  tags:
    - dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  only:
    - tags
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - docker push "$CI_REGISTRY_IMAGE:latest"


stylelint: *yarn


test:
  <<: *yarn
  script: yarn test --coverage
  artifacts:
    paths:
      - coverage/
