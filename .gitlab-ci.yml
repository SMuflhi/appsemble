image: node:10


stages:
  - test
  - build
  - publish
  - deploy


.yarn: &yarn
  before_script:
    - apt-get update
    - apt-get install nasm
    - yarn --frozen-lockfile
  script: yarn $CI_JOB_NAME


build:docker:
  stage: build
  services:
    - docker:dind
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" "$CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME"
    - docker push "$CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"


deploy:staging:
  stage: deploy
  image: alpine
  variables:
    GIT_STRATEGY: none
  only:
    - master
  environment:
    name: staging
  script:
    - apk add --no-cache curl
    - curl -X POST -F "token=$CI_JOB_TOKEN" -F "ref=master" -F "variables[RELEASE]=staging" https://gitlab.com/api/v4/projects/8452871/trigger/pipeline


eslint: *yarn


pages:
  stage: build
  image: busybox
  variables:
    GIT_STRATEGY: none
  dependencies:
    - test
  only:
    - master
  script: mv coverage/lcov-report public
  artifacts:
    paths:
      - public/


publish:docker:latest:
  stage: publish
  services:
    - docker:dind
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    GIT_STRATEGY: none
  only:
    - tags
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:latest"


stylelint: *yarn


test:
  <<: *yarn
  services:
    - name: mysql:8.0
      command: [--default-authentication-plugin=mysql_native_password]
  variables:
    MYSQL_DATABASE: testAppsemble
    MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
    MYSQL_USER: appsemble
    MYSQL_PASSWORD: password
    DATABASE_URL: 'mysql://appsemble:password@mysql:3306'
  script: yarn test --coverage
  artifacts:
    paths:
      - coverage/
