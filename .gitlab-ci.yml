image: node:10-slim

stages:
  - test
  - build
  - publish
  - deploy

build:docker:
  stage: build
  services:
    - docker:dind
  image: docker
  tags:
    - dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" "$CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME"
    - docker push "$CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"

deploy:staging:
  stage: deploy
  image: alpine
  variables:
    GIT_STRATEGY: none
  only:
    - master
  environment:
    name: staging
  script:
    - apk add --no-cache curl
    - curl -X POST -F "token=$CI_JOB_TOKEN" -F "ref=master" -F "variables[RELEASE]=staging"
      https://gitlab.com/api/v4/projects/8452871/trigger/pipeline

eslint:
  script:
    - yarn --frozen-lockfile
    - yarn eslint
  artifacts:
    reports:
      codequality: gl-codequality.json

docs:
  script:
    - yarn global add gitbook-cli
    - gitbook install
    - gitbook build . public
  artifacts:
    paths:
      - public/

pages:
  stage: build
  image: busybox
  variables:
    GIT_STRATEGY: none
  dependencies:
    - test
    - docs
  # only:
  #   - master
  script:
    - mv coverage/lcov-report public/coverage
  artifacts:
    paths:
      - public/

prettier:
  script:
    - yarn --frozen-lockfile
    - yarn prettier

publish:docker:latest:
  stage: publish
  services:
    - docker:dind
  image: docker
  tags:
    - dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    GIT_STRATEGY: none
  only:
    - tags
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USER --password-stdin
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" "$CI_REGISTRY_IMAGE:latest"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" "appsemble/appsemble:latest"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" "appsemble/appsemble:$CI_COMMIT_TAG"
    - docker push "$CI_REGISTRY_IMAGE:latest"
    - docker push "appsemble/appsemble:latest"
    - docker push "appsemble/appsemble:$CI_COMMIT_TAG"

stylelint:
  script:
    - yarn --frozen-lockfile
    - yarn stylelint
      # This replaces the regular stylelint behaviour, instead of enhancing it.
      # https://github.com/stylelint/stylelint/issues/2369
    - yarn stylelint:rd

test:
  services:
    - name: mysql:8.0
      command: [--default-authentication-plugin=mysql_native_password]
  variables:
    MYSQL_DATABASE: testAppsemble
    MYSQL_ROOT_PASSWORD: password
    DATABASE_URL: 'mysql://root:password@mysql:3306'
  script:
    - yarn --frozen-lockfile
    - yarn test --coverage --reporters default --reporters jest-junit
  artifacts:
    paths:
      - coverage/
    reports:
      junit: junit.xml

test:postgres:
  services:
    - postgres:10.0
  variables:
    POSTGRES_DB: testAppsemble
    POSTGRES_USER: root
    POSTGRES_PASSWORD: password
    DATABASE_URL: 'postgresql://root:password@postgres:5432/testAppsemble'
  script:
    - yarn --frozen-lockfile
    - yarn test --reporters default --reporters jest-junit
  artifacts:
    reports:
      junit: junit.xml
