image: node:10-slim

stages:
  - test
  - build
  - publish
  - deploy
  - provision

build:docker:
  stage: build
  services:
    - docker:dind
  image: docker
  tags:
    - dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"

build:blocks:
  stage: build
  script:
    - yarn --frozen-lockfile
    - yarn block action-button
    - yarn block detail-viewer
    - yarn block form
    - yarn block map
    - yarn block splash
  artifacts:
    expire_in: 3 days
    paths:
      - blocks/action-button/dist/
      - blocks/action-button/package.json
      - blocks/detail-viewer/dist/
      - blocks/detail-viewer/package.json
      - blocks/form/dist/
      - blocks/form/package.json
      - blocks/map/dist/
      - blocks/map/package.json
      - blocks/splash/dist/
      - blocks/splash/package.json

deploy:review:
  stage: deploy
  when: manual
  except:
    - master@dcentralized/appsemble/appsemble
  allow_failure: false
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.appsemble.app
    on_stop: deploy:review:stop
  script:
    - yarn --frozen-lockfile
    - node -r esm config/bin/deploy.js
    # This allows passing the CI_ENVIRONMENT_URL for use in later stages.
    - yarn appsemble config set remote "$CI_ENVIRONMENT_URL"
  artifacts:
    expire_in: 1 day
    paths:
      - package.json

deploy:review:stop:
  stage: deploy
  when: manual
  except:
    - master@dcentralized/appsemble/appsemble
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  script:
    - yarn --frozen-lockfile
    - node -r esm config/bin/stop.js

deploy:staging:
  stage: deploy
  only:
    - master@dcentralized/appsemble/appsemble
  environment:
    name: review/master
    url: https://staging.appsemble.app
    on_stop: deploy:staging:stop
  script:
    - yarn --frozen-lockfile
    - node -r esm config/bin/deploy.js
    # This allows passing the CI_ENVIRONMENT_URL for use in later stages.
    - yarn appsemble config set remote "$CI_ENVIRONMENT_URL"
  artifacts:
    expire_in: 1 day
    paths:
      - package.json

deploy:staging:stop:
  stage: deploy
  when: manual
  only:
    - master@dcentralized/appsemble/appsemble
  environment:
    name: review/master
    action: stop
  script:
    - yarn --frozen-lockfile
    - node -r esm config/bin/stop.js

eslint:
  script:
    - yarn --frozen-lockfile
    - yarn eslint
  artifacts:
    reports:
      codequality: gl-codequality.json

pack:
  stage: build
  script:
    - yarn workspace @appsemble/cli pack
    - yarn workspace @appsemble/node-utils pack
    - yarn workspace @appsemble/react pack
    - yarn workspace @appsemble/sdk pack
    - yarn workspace @appsemble/server pack
    - yarn workspace create-appsemble pack
  artifacts:
    paths:
      - packages/**/*.tgz

pages:
  only:
    - master
  script:
    - yarn --frozen-lockfile
    - yarn gitbook build . public
    - yarn surge --domain https://appsemble.surge.sh --project ./public
    # publish to surge, replace with GitLab Pages when https://gitlab.com/gitlab-org/gitlab-ce/issues/30548 is resolved.
  artifacts:
    paths:
      - public/

prettier:
  script:
    - yarn --frozen-lockfile
    - yarn prettier

publish:docker:latest:
  stage: publish
  services:
    - docker:dind
  image: docker
  tags:
    - dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    GIT_STRATEGY: none
  only:
    - tags
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USER --password-stdin
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" "$CI_REGISTRY_IMAGE:latest"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" "appsemble/appsemble:latest"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" "appsemble/appsemble:$CI_COMMIT_TAG"
    - docker push "$CI_REGISTRY_IMAGE:latest"
    - docker push "appsemble/appsemble:latest"
    - docker push "appsemble/appsemble:$CI_COMMIT_TAG"

provision:blocks:
  stage: provision
  dependencies:
    - build:blocks
    - pack
    - deploy:review
    - deploy:staging
  variables:
    GIT_STRATEGY: none
  script:
    - npm install ./packages/node-utils/*.tgz
    - npm install ./packages/cli/*.tgz
    - yarn appsemble block register --ignore-conflict blocks/action-button
    - yarn appsemble block register --ignore-conflict blocks/detail-viewer
    - yarn appsemble block register --ignore-conflict blocks/form
    - yarn appsemble block register --ignore-conflict blocks/map
    - yarn appsemble block register --ignore-conflict blocks/splash

stylelint:
  script:
    - yarn --frozen-lockfile
    - yarn stylelint
      # This replaces the regular stylelint behaviour, instead of enhancing it.
      # https://github.com/stylelint/stylelint/issues/2369
    - yarn stylelint:rd

test:
  services:
    - name: mysql:8
      command: [--default-authentication-plugin=mysql_native_password]
  variables:
    MYSQL_DATABASE: testAppsemble
    MYSQL_ROOT_PASSWORD: password
    DATABASE_URL: 'mysql://root:password@mysql:3306'
  script:
    - yarn --frozen-lockfile
    - yarn test --coverage --reporters default --reporters jest-junit
  artifacts:
    paths:
      - coverage/
    reports:
      junit: junit.xml

# XXX “should not be possible to register the same block version twice” in
# server/controllers/blocks.test.js fails for Postgres due to commit
# 163ba1e5561c8a180f969dc5ea756e8d2d4fb54c.
# Postgres support is not worth blocking that commit, so Postgres tests have been excluded for now.
.test:postgres:
  services:
    - postgres:10
  variables:
    POSTGRES_DB: testAppsemble
    POSTGRES_USER: root
    POSTGRES_PASSWORD: password
    DATABASE_URL: 'postgresql://root:password@postgres:5432/testAppsemble'
  script:
    - yarn --frozen-lockfile
    - yarn test --reporters default --reporters jest-junit
  artifacts:
    reports:
      junit: junit.xml

tsc:
  script:
    - yarn --frozen-lockfile
    - yarn tsc
